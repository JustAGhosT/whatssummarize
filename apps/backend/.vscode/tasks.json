{
  "version": "2.0.0",
  "tasks": [
    {
      "type": "npm",
      "script": "dev",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": [],
      "label": "npm: dev",
      "detail": "tsx watch src/index.ts",
      "isBackground": true
    },
    {
      "type": "npm",
      "script": "build",
      "group": "build",
      "problemMatcher": ["$tsc"],
      "label": "npm: build",
      "detail": "tsc --noEmit"
    },
    {
      "type": "npm",
      "script": "test",
      "group": "test",
      "problemMatcher": [],
      "label": "npm: test",
      "detail": "vitest run"
    },
    {
      "type": "npm",
      "script": "test:watch",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "problemMatcher": [],
      "label": "npm: test:watch",
      "detail": "vitest",
      "isBackground": true
    },
    {
      "type": "npm",
      "script": "lint",
      "group": "build",
      "problemMatcher": ["$eslint-stylish"],
      "label": "npm: lint",
      "detail": "eslint . --ext .ts,.tsx --fix"
    },
    {
      "type": "npm",
      "script": "format",
      "group": "build",
      "problemMatcher": [],
      "label": "npm: format",
      "detail": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\""
    },
    {
      "type": "shell",
      "label": "Start Database",
      "command": "docker-compose up -d postgres",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "Stop Database",
      "command": "docker-compose down",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "Prisma: Migrate",
      "command": "npx prisma migrate dev",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "Prisma: Generate",
      "command": "npx prisma generate",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "Prisma: Studio",
      "command": "npx prisma studio",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "isBackground": true,
      "problemMatcher": []
    }
  ]
}
